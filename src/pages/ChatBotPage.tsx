import React, { useState, useRef, useEffect } from "react";

const mockBotReply = (userMsg: string) => {
  // Gi·∫£ l·∫≠p tr·∫£ l·ªùi c·ªßa bot
  if (userMsg.toLowerCase().includes("n∆∞·ªõc cam")) {
    return (
      "Ch√†o b·∫°n, m√¨nh l√† chatbot t∆∞ v·∫•n ngh·ªÅ nghi·ªáp c·ªßa FPT University. R·∫•t ti·∫øc, th√¥ng tin m√¨nh c√≥ hi·ªán t·∫°i t·∫≠p trung v√†o c√°c ch∆∞∆°ng tr√¨nh h·ªçc, h·ªçc ph√≠ v√† c√°c ng√†nh ƒë√†o t·∫°o t·∫°i tr∆∞·ªùng. M√¨nh ch∆∞a ƒë∆∞·ª£c trang b·ªã ki·∫øn th·ª©c v·ªÅ c√°ch pha n∆∞·ªõc cam üçä.\n\n" +
      "Tuy nhi√™n, n·∫øu b·∫°n c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc n√†o v·ªÅ c√°c ng√†nh h·ªçc nh∆∞ C√¥ng ngh·ªá th√¥ng tin, Qu·∫£n tr·ªã kinh doanh, C√¥ng ngh·ªá truy·ªÅn th√¥ng ho·∫∑c c√°c v·∫•n ƒë·ªÅ li√™n quan ƒë·∫øn h·ªçc ph√≠ t·∫°i FPT University, m√¨nh r·∫•t s·∫µn l√≤ng h·ªó tr·ª£! üòä\n\n" +
      "N·∫øu b·∫°n c·∫ßn th√™m th√¥ng tin, ƒë·ª´ng ng·∫ßn ng·∫°i li√™n h·ªá nh√©:\n" +
      "üìû Hotline: (024) 7300 1866\n" +
      "‚úâÔ∏è Email: daihocfpt@fpt.edu.vn"
    );
  }
  return "Xin ch√†o! M√¨nh l√† chatbot t∆∞ v·∫•n c·ªßa FPT University. B·∫°n c·∫ßn h·ªó tr·ª£ g√¨?";
};

const ChatBotPage: React.FC = () => {
  const [messages, setMessages] = useState([
    {
      from: "bot",
      text: "Xin ch√†o! M√¨nh l√† chatbot t∆∞ v·∫•n c·ªßa FPT University. B·∫°n c·∫ßn h·ªó tr·ª£ g√¨?",
    },
  ]);
  const [input, setInput] = useState("");
  const messagesEndRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  }, [messages]);

  const handleSend = () => {
    if (!input.trim()) return;
    const userMsg = input;
    setMessages((msgs) => [...msgs, { from: "user", text: userMsg }]);
    setInput("");
    setTimeout(() => {
      setMessages((msgs) => [
        ...msgs,
        { from: "bot", text: mockBotReply(userMsg) },
      ]);
    }, 800);
  };

  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {
    if (e.key === "Enter") handleSend();
  };

  return (
    <div className="min-h-screen bg-gray-50 flex flex-col items-center py-8">
      {/* Header cam */}
      <div className="w-full max-w-2xl rounded-t-xl bg-orange-500 flex items-center px-6 py-3 gap-4 shadow-lg">
        {/* <img src="/public/images/logo/logo.svg" alt="logo" className="h-10" /> */}
        <span className="text-white text-xl font-semibold flex-1">
          FPT Career Chatbot
        </span>
        <span className="text-white text-sm">
          ‚úâÔ∏è Email: daihocfpt@fpt.edu.vn
        </span>
      </div>
      {/* Khung chat */}
      <div className="w-full max-w-2xl bg-white rounded-b-xl shadow-lg flex flex-col flex-1 min-h-[500px] pb-4 px-4 pt-4 overflow-y-auto">
        <div className="flex flex-col gap-4 flex-1">
          {messages.map((msg, idx) => (
            <div
              key={idx}
              className={`flex ${
                msg.from === "user" ? "justify-end" : "justify-start"
              }`}
            >
              <div
                className={`rounded-xl px-4 py-3 max-w-[80%] whitespace-pre-line text-base shadow-sm ${
                  msg.from === "user"
                    ? "bg-blue-500 text-white self-end"
                    : "bg-gray-100 text-gray-800 self-start"
                }`}
              >
                {msg.text}
              </div>
            </div>
          ))}
          <div ref={messagesEndRef} />
        </div>
        {/* Input */}
        <div className="flex items-center gap-2 mt-4">
          <input
            type="text"
            className="flex-1 rounded-full border border-gray-300 px-4 py-2 focus:outline-none focus:ring-2 focus:ring-orange-400"
            placeholder="Nh·∫≠p c√¢u h·ªèi c·ªßa b·∫°n..."
            value={input}
            onChange={(e) => setInput(e.target.value)}
            onKeyDown={handleKeyDown}
          />
          <button
            className="bg-orange-500 hover:bg-orange-600 text-white font-semibold px-6 py-2 rounded-full transition"
            onClick={handleSend}
          >
            G·ª≠i
          </button>
        </div>
      </div>
    </div>
  );
};

export default ChatBotPage;
