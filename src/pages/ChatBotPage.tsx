import React, { useState, useRef, useEffect } from "react";
import Header from "../components/layout/Header";

// Mock data cho l·ªãch s·ª≠ chat
const chatHistory = [
  { id: 1, name: "L√≤ s·∫•y cao t·∫ßn" },
  { id: 2, name: "Keo s·ªØa v√† x√∫c t√°c" },
  { id: 3, name: "C√°c lo·∫°i v·∫£i √°o d√†i" },
  { id: 4, name: "V·∫£i Umi l√† g√¨" },
  { id: 5, name: "T·ªëi ∆∞u ch√≠nh s√°ch b·∫£o m·∫≠t" },
  { id: 6, name: "T·ªïng h·ª£p kh·∫£o s√°t du l·ªãch" },
  { id: 7, name: "Tr√≠ch xu·∫•t n·ªôi dung web" },
  { id: 8, name: "Du l·ªãch c√¥ng ngh·ªá v√† c√° nh√¢n h√≥a" },
  { id: 9, name: "T√≠nh v·∫£i may ƒë·ªìng ph·ª•c" },
];

type ChatMessage = { from: "bot" | "user"; text: string };
const mockChatContent: Record<number, ChatMessage[]> = {
  1: [
    { from: "bot", text: "Xin ch√†o! B·∫°n c·∫ßn t∆∞ v·∫•n v·ªÅ l√≤ s·∫•y cao t·∫ßn?" },
    { from: "user", text: "V√¢ng, cho m√¨nh h·ªèi v·ªÅ nguy√™n l√Ω ho·∫°t ƒë·ªông." },
  ],
  2: [{ from: "bot", text: "B·∫°n mu·ªën bi·∫øt v·ªÅ keo s·ªØa hay x√∫c t√°c?" }],
  // ... c√°c ƒëo·∫°n chat kh√°c
};

const mockBotReply = (userMsg: string) => {
  // Gi·∫£ l·∫≠p tr·∫£ l·ªùi c·ªßa bot
  if (userMsg.toLowerCase().includes("n∆∞·ªõc cam")) {
    return (
      "Ch√†o b·∫°n, m√¨nh l√† chatbot t∆∞ v·∫•n ngh·ªÅ nghi·ªáp c·ªßa FPT University. R·∫•t ti·∫øc, th√¥ng tin m√¨nh c√≥ hi·ªán t·∫°i t·∫≠p trung v√†o c√°c ch∆∞∆°ng tr√¨nh h·ªçc, h·ªçc ph√≠ v√† c√°c ng√†nh ƒë√†o t·∫°o t·∫°i tr∆∞·ªùng. M√¨nh ch∆∞a ƒë∆∞·ª£c trang b·ªã ki·∫øn th·ª©c v·ªÅ c√°ch pha n∆∞·ªõc cam üçä.\n\n" +
      "Tuy nhi√™n, n·∫øu b·∫°n c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc n√†o v·ªÅ c√°c ng√†nh h·ªçc nh∆∞ C√¥ng ngh·ªá th√¥ng tin, Qu·∫£n tr·ªã kinh doanh, C√¥ng ngh·ªá truy·ªÅn th√¥ng ho·∫∑c c√°c v·∫•n ƒë·ªÅ li√™n quan ƒë·∫øn h·ªçc ph√≠ t·∫°i FPT University, m√¨nh r·∫•t s·∫µn l√≤ng h·ªó tr·ª£! üòä\n\n" +
      "N·∫øu b·∫°n c·∫ßn th√™m th√¥ng tin, ƒë·ª´ng ng·∫ßn ng·∫°i li√™n h·ªá nh√©:\n" +
      "üìû Hotline: (024) 7300 1866\n" +
      "‚úâÔ∏è Email: daihocfpt@fpt.edu.vn"
    );
  }
  return "Xin ch√†o! M√¨nh l√† chatbot t∆∞ v·∫•n c·ªßa FPT University. B·∫°n c·∫ßn h·ªó tr·ª£ g√¨?";
};

const ChatBotPage: React.FC = () => {
  const [selectedChat, setSelectedChat] = useState<number>(chatHistory[0].id);
  const [messages, setMessages] = useState([
    {
      from: "bot",
      text: "Xin ch√†o! M√¨nh l√† chatbot t∆∞ v·∫•n c·ªßa FPT University. B·∫°n c·∫ßn h·ªó tr·ª£ g√¨?",
    },
  ]);
  const [input, setInput] = useState("");
  const messagesEndRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  }, [messages]);

  const handleSend = () => {
    if (!input.trim()) return;
    const userMsg = input;
    setMessages((msgs) => [...msgs, { from: "user", text: userMsg }]);
    setInput("");
    setTimeout(() => {
      setMessages((msgs) => [
        ...msgs,
        { from: "bot", text: mockBotReply(userMsg) },
      ]);
    }, 800);
  };

  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {
    if (e.key === "Enter") handleSend();
  };

  return (
    <>
      <Header />
      <div className="flex h-screen bg-gray-50">
        {/* Sidebar l·ªãch s·ª≠ chat */}
        <aside className="w-72 bg-white border-r border-gray-200 p-4 overflow-y-auto">
          <h2 className="text-lg font-bold mb-4">ƒêo·∫°n chat</h2>
          <ul>
            {chatHistory.map((chat) => (
              <li
                key={chat.id}
                className={`p-2 rounded cursor-pointer mb-1 transition font-medium ${
                  selectedChat === chat.id
                    ? "bg-orange-100 text-orange-700"
                    : "hover:bg-gray-100"
                }`}
                onClick={() => setSelectedChat(chat.id)}
              >
                {chat.name}
              </li>
            ))}
          </ul>
        </aside>

        {/* Main chat area */}
        <main className="flex-1 flex flex-col h-full">
          {/* Header chat */}
          <header className="h-16 flex items-center px-6 border-b bg-white shadow-sm">
            <span className="text-xl font-semibold text-gray-800">
              {chatHistory.find((c) => c.id === selectedChat)?.name}
            </span>
          </header>
          {/* N·ªôi dung chat */}
          <div className="flex-1 p-6 overflow-y-auto flex flex-col gap-2">
            {(
              mockChatContent[selectedChat] || [
                { from: "bot", text: "Ch∆∞a c√≥ n·ªôi dung chat cho ch·ªß ƒë·ªÅ n√†y." },
              ]
            ).map((msg: ChatMessage, idx: number) => (
              <div
                key={idx}
                className={`max-w-[70%] px-4 py-2 rounded-lg shadow text-base font-sans ${
                  msg.from === "user"
                    ? "bg-orange-500 text-white self-end"
                    : "bg-gray-200 text-gray-800 self-start"
                }`}
              >
                {msg.text}
              </div>
            ))}
          </div>
          {/* √î nh·∫≠p chat (t√πy ch·ªçn, c√≥ th·ªÉ th√™m sau) */}
          <div className="flex items-center gap-2 mt-4">
            <input
              type="text"
              className="flex-1 rounded-full border border-gray-300 px-4 py-2 focus:outline-none focus:ring-2 focus:ring-orange-400"
              placeholder="Nh·∫≠p c√¢u h·ªèi c·ªßa b·∫°n..."
              value={input}
              onChange={(e) => setInput(e.target.value)}
              onKeyDown={handleKeyDown}
            />
            <button
              className="bg-orange-500 hover:bg-orange-600 text-white font-semibold px-6 py-2 rounded-full transition"
              onClick={handleSend}
            >
              G·ª≠i
            </button>
          </div>
        </main>
      </div>
    </>
  );
};

export default ChatBotPage;
